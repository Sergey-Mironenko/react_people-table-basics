{"version":3,"sources":["api.ts","PersonLink.tsx","PeopleTable.tsx","components/Loader/Loader.tsx","PeoplePage.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","name","sex","setActivePerson","className","classNames","to","slug","onClick","PeopleTable","activePerson","people","map","born","died","motherName","find","woman","fatherName","man","Loader","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","getPersons","useEffect","PageNavLink","text","isActive","App","role","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.16fd06e4.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from './types/Person';\n\ntype Props = {\n  person: Person | undefined,\n  name: string,\n  sex: string | undefined,\n  setActivePerson(person: Person): void,\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person,\n  name,\n  sex,\n  setActivePerson,\n}) => (\n  <Link\n    className={classNames('', { 'has-text-danger': sex === 'f' })}\n    to={`/people/${person?.slug}`}\n    onClick={() => {\n      if (person) {\n        setActivePerson(person);\n      }\n    }}\n  >\n    {name}\n  </Link>\n);\n","import classNames from 'classnames';\nimport { Person } from './types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  activePerson: Person | null,\n  setActivePerson(person: Person): void,\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  activePerson,\n  setActivePerson,\n  people,\n}) => {\n  return (\n    <>\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {people.map(person => (\n            <tr\n              data-cy=\"person\"\n              className={classNames(\n                '',\n                {\n                  'has-background-warning':\n                  person.slug === activePerson?.slug,\n                },\n              )}\n            >\n              <td>\n                <PersonLink\n                  person={person}\n                  name={person.name}\n                  sex={person.sex}\n                  setActivePerson={setActivePerson}\n                />\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {person.motherName\n                  && people.find(woman => woman.name === person.motherName) && (\n                  <PersonLink\n                    person={people.find(\n                      woman => woman.name === person.motherName,\n                    )}\n                    name={person.motherName}\n                    sex=\"f\"\n                    setActivePerson={setActivePerson}\n                  />\n                )}\n\n                {person.motherName\n                  && !people.find(\n                    woman => woman.name === person.motherName,\n                  ) && (\n                  `${person.motherName}`\n                )}\n\n                {!person.motherName\n                  && !people.find(\n                    woman => woman.name === person.motherName,\n                  ) && (\n                  '-'\n                )}\n              </td>\n              <td>\n                {person.fatherName\n                  && people.find(man => man.name === person.fatherName) && (\n                  <PersonLink\n                    person={people.find(man => man.name === person.fatherName)}\n                    name={person.fatherName}\n                    sex=\"m\"\n                    setActivePerson={setActivePerson}\n                  />\n                )}\n\n                {person.fatherName\n                  && !people.find(man => man.name === person.fatherName) && (\n                  `${person.fatherName}`\n                )}\n\n                {!person.fatherName\n                  && !people.find(man => man.name === person.fatherName) && (\n                  '-'\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useState, useEffect } from 'react';\nimport { Person } from './types';\nimport { getPeople } from './api';\nimport { PeopleTable } from './PeopleTable';\nimport { Loader } from './components/Loader';\n\ntype Props = {\n  activePerson: Person | null,\n  setActivePerson(person: Person): void,\n};\n\nexport const PeoplePage: React.FC<Props> = ({\n  activePerson,\n  setActivePerson,\n}) => {\n  const [people, setPeople] = useState<Person[] | []>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const getPersons = async () => {\n    setIsLoading(true);\n    setIsError(false);\n\n    try {\n      const response = await getPeople();\n\n      setPeople(response);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    setPeople([]);\n    getPersons();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(!isLoading && !isError) && (\n            <PeopleTable\n              activePerson={activePerson}\n              setActivePerson={setActivePerson}\n              people={people}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport {\n  Navigate,\n  NavLink,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from './types';\nimport { PeoplePage } from './PeoplePage';\n\nimport './App.scss';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n    to={`${to}`}\n  >\n    {text}\n  </NavLink>\n);\n\nexport const App = () => {\n  const [activePerson, setActivePerson] = useState<Person | null>(null);\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <PageNavLink to=\"/\" text=\"Home\" />\n            <PageNavLink to=\"/people\" text=\"People\" />\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<h1 className=\"title\">Home Page</h1>}\n            />\n\n            <Route\n              path=\"/home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n\n            <Route\n              path=\"/people\"\n              element={(\n                <PeoplePage\n                  activePerson={activePerson}\n                  setActivePerson={setActivePerson}\n                />\n              )}\n            />\n\n            <Route\n              path={`/people/:${activePerson?.slug}`}\n              element={(\n                <PeoplePage\n                  activePerson={activePerson}\n                  setActivePerson={setActivePerson}\n                />\n              )}\n            />\n\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}